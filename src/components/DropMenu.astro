---
interface MenuProp {
  btnName: string;
  links: MenuItem[];
}

interface MenuItem {
  url: string;
  name: string;
}

const { btnName, links } = Astro.props as MenuProp;
---

<div class="dropdown">
  <button class="dropbtn"
    >{btnName}
    <svg
      aria-hidden="true"
      class="icon"
      width="16"
      height="16"
      viewBox="0 0 24 24"
      fill="currentColor"
    >
      <path
        d="M17 9.17a1 1 0 0 0-1.41 0L12 12.71 8.46 9.17a1 1 0 1 0-1.41 1.42l4.24 4.24a1.002 1.002 0 0 0 1.42 0L17 10.59a1.002 1.002 0 0 0 0-1.42Z"
      ></path>
    </svg></button
  >

  <div class="dropdown-content">
    {
      links.map((item) => {
        const { url, name } = item;
        return <a href={url}>{name}</a>;
      })
    }
  </div>
</div>

<style>
  /* 下拉按钮样式 */
  .dropbtn {
    box-sizing: border-box;
    background-color: var(--text-color);
    color: var(--bg-color);
    padding: 16px;
    height: 60px;
    width: 150px;
    font-size: 22px;
    border: none;
    cursor: pointer;
  }

  .dropbtn svg {
    display: inline;
  }

  /* 下拉内容 (默认隐藏) */
  .dropdown-content {
    display: none;
    position: absolute;
    background-color: var(--bg-color);
    width: 150px;
    overflow: auto;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 1;
  }

  /* 下拉菜单的链接 */
  .dropdown-content a {
    box-sizing: border-box;
    color: black;
    padding: 12px 16px;
    width: 150px;
    text-decoration: none;
    display: block;
    border: 0px;
  }

  /* 鼠标移上去后修改下拉菜单链接颜色 */
  .dropdown-content a:hover {
    background-color: var(--hover-menu-color);
  }

  /* 在鼠标移上去后显示下拉菜单 */
  .dropdown:hover .dropdown-content {
    display: block;
  }
</style>
